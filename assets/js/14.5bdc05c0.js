(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{367:function(t,e,s){"use strict";s.r(e);var a=s(45),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_2020-10-12-월"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2020-10-12-월"}},[t._v("#")]),t._v(" 2020-10-12(월)")]),t._v(" "),s("h2",{attrs:{id:"_1-학습-날짜"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-학습-날짜"}},[t._v("#")]),t._v(" 1. 학습 날짜")]),t._v(" "),s("ul",[s("li",[t._v("2020-10-12(월)\n"),s("br")])]),t._v(" "),s("h2",{attrs:{id:"_2-학습-시간"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-학습-시간"}},[t._v("#")]),t._v(" 2. 학습 시간")]),t._v(" "),s("ul",[s("li",[t._v("00:00 ~ 04:30(클러스터)\n"),s("br")])]),t._v(" "),s("h2",{attrs:{id:"_3-학습-범위-및-주제"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-학습-범위-및-주제"}},[t._v("#")]),t._v(" 3. 학습 범위 및 주제")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Libft 에 대한 기본적인 이해 및 함수 구현.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}}),t._v(" "),s("th",{staticStyle:{"text-align":"center"}}),t._v(" "),s("th",{staticStyle:{"text-align":"center"}}),t._v(" "),s("th",{staticStyle:{"text-align":"center"}}),t._v(" "),s("th",{staticStyle:{"text-align":"center"}}),t._v(" "),s("th",{staticStyle:{"text-align":"center"}}),t._v(" "),s("th",{staticStyle:{"text-align":"center"}})])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("memset")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("bzero")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("memcpy")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("memccpy")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("memmove")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("memchr")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("memcmp")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("strlen")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("strlcpy")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("strlcat")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("strchr")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("strrchr")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("strnstr")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("strncmp")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("atoi")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("isalpha")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("isdigit")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("isalnum")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("isascii")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("isprint")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("toupper")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("tolower")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("calloc")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("strdup")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("substr")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("strjoin")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("strtrim")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("split")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("itoa")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("strmapi")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("putchar_fd")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("putstr_fd")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("putendl_fd")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("putnbr_fd")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("libft.h")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O")])])])])]),t._v(" "),s("li",[s("p",[t._v("Bonus 함수 구현")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}}),t._v(" "),s("th",{staticStyle:{"text-align":"center"}}),t._v(" "),s("th",{staticStyle:{"text-align":"center"}}),t._v(" "),s("th",{staticStyle:{"text-align":"center"}}),t._v(" "),s("th",{staticStyle:{"text-align":"center"}})])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("lstnew")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lstadd_front")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lstsize")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lstlast")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lstadd_back")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("lstdelone")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lstclear")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lstiter")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lstmap")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})])])])])]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"_4-동료-학습-방법"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-동료-학습-방법"}},[t._v("#")]),t._v(" 4. 동료 학습 방법")]),t._v(" "),s("ul",[s("li",[t._v("junhykim 과 전날 밤 22시 00분 클러스터 방문.\n"),s("br")])]),t._v(" "),s("h2",{attrs:{id:"_5-학습-목표"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-학습-목표"}},[t._v("#")]),t._v(" 5. 학습 목표")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Libft")]),t._v(" 에 있는 각 함수들을 이해하고 구현한다.")]),t._v(" "),s("li",[s("strong",[t._v("Makefile")]),t._v("에 대해 심화 학습.")]),t._v(" "),s("li",[s("strong",[t._v("mem*.c")]),t._v(" 에 대한 학습과 구현.\n"),s("br")])]),t._v(" "),s("h2",{attrs:{id:"_6-상세-학습-내용"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-상세-학습-내용"}},[t._v("#")]),t._v(" 6. 상세 학습 내용")]),t._v(" "),s("h4",{attrs:{id:"string-h-에-내장되어-있는-함수들"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-h-에-내장되어-있는-함수들"}},[t._v("#")]),t._v(" <string.h> 에 내장되어 있는 함수들.")]),t._v(" "),s("h4",{attrs:{id:"_1-memset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-memset"}},[t._v("#")]),t._v(" 1. memset")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ft_memset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("size_t")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("size_t")]),t._v("\t\t\ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("memset")]),t._v(" 함수는 어떤 메모리의 시작점("),s("code",[t._v("b")]),t._v(")부터 연속된 범위("),s("code",[t._v("len")]),t._v(")를 어떤 값("),s("code",[t._v("c")]),t._v(")으로(바이트 단위) 모두 지정하고 싶을 때 사용하는 함수이다.")]),t._v(" "),s("li",[t._v("초기화 할 값인 "),s("code",[t._v("c")]),t._v("는 인자로는 "),s("code",[t._v("int")]),t._v("로 전달되지만 함수에서는 "),s("code",[t._v("unsigned char")]),t._v("로 형변환 되어서 사용해야 한다.(man memset)")]),t._v(" "),s("li",[s("code",[t._v("1 byte")]),t._v(" 단위로 초기화 한다."),s("br"),t._v("\n그러므로 "),s("code",[t._v("char형 배열은 1byte")]),t._v("로 괜찮지만, "),s("code",[t._v("int형 배열은 4byte")]),t._v("라서 초기화 할 때 주의해야 한다.\n"),s("blockquote",[s("p",[t._v("예를 들면 "),s("code",[t._v("arr가 int형")]),t._v(" 일 때, "),s("code",[t._v("ft_memset(arr, 1, sizeof(arr))")]),t._v("을 호출하면 arr 배열이 모두 "),s("code",[t._v("1")]),t._v(" 로 초기화 된다고 생각하는데, 실제로는 배열이 모두 "),s("code",[t._v("16843009")]),t._v(" 로 초기화 된다. 16843009의 2진수 표현은 "),s("code",[t._v("0001 00000001 00000001 00000001")]),t._v(" 이다. 즉, "),s("code",[t._v("int형 arr 배열은 1바이트(8비트)당 1로 초기화 된 것이다.")]),t._v(" 바이트가 딱 떨어지게 초기화 되지 않기 때문에 int형 배열의 요소를 1로 초기화 할 수 없다. 다른 정수도 모두 마찬가지다.  "),s("br"),t._v('\n딱 4개의 값은 가능하다.    " '),s("code",[t._v("0")]),t._v(" , "),s("code",[t._v("-1")]),t._v(" , "),s("code",[t._v("0x3f")]),t._v(" , "),s("code",[t._v("0x7f.")]),t._v(' "')])])]),t._v(" "),s("li",[s("code",[t._v("size_t")]),t._v(" 자료형은 '이론상 가장 큰 사이즈를 담을 수 있는 "),s("code",[t._v("unsigned")]),t._v(" 데이터 타입'으로 정의된다.")])]),t._v(" "),s("h4",{attrs:{id:"_2-bzero"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-bzero"}},[t._v("#")]),t._v(" 2. bzero")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ft_bzero")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("size_t")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ft_memset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("bzero")]),t._v(" 함수는 어떤 메모리의 시작점("),s("code",[t._v("b")]),t._v(")에서 연속된 범위("),s("code",[t._v("n")]),t._v(")만큼 "),s("code",[t._v("0")]),t._v(" 으로(바이트 단위) 초기화하는 함수이다.")]),t._v(" "),s("li",[s("code",[t._v("memset")]),t._v(" 함수를 이용하여 쉽게 만들 수 있다.")])]),t._v(" "),s("h4",{attrs:{id:"_3-memcpy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-memcpy"}},[t._v("#")]),t._v(" 3. memcpy")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ft_memcpy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("dst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("size_t")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("size_t")]),t._v("\t\t\ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cp_dst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cp_src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   cp_dst "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("dst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   cp_src "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   \t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cp_dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cp_src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("memcpy")]),t._v(" 함수는 문자열("),s("code",[t._v("src")]),t._v(") 의 시작점에서 "),s("code",[t._v("n")]),t._v(" 만큼을 "),s("code",[t._v("dst")]),t._v(" 에 복사함.")]),t._v(" "),s("li",[s("code",[t._v("src")]),t._v(" 의 "),s("code",[t._v("null")]),t._v("을 검사하지 않고 "),s("code",[t._v("n")]),t._v(" byte 만큼 복사함.")]),t._v(" "),s("li",[t._v("memory 영역은 반드시 겹치지 않아야한다. 겹칠 경우, "),s("code",[t._v("memmove")]),t._v(" 를 사용해야한다.\n"),s("blockquote",[s("p",[t._v("메모리 겹침에 대한 stackoverflow 의견"),s("br"),t._v("\nhttps://stackoverflow.com/questions/43088070/meaning-of-overlapping-when-using-memcpy\nmemcpy vs memmove "),s("br"),t._v("\nhttps://stackoverflow.com/questions/4415910/memcpy-vs-memmove")])])]),t._v(" "),s("li",[s("code",[t._v("memcpy()")]),t._v(" 은 "),s("code",[t._v("dest 의 포인터")]),t._v(" 를 반환한다.")]),t._v(" "),s("li",[s("code",[t._v("const void *")]),t._v(" 의 경우 컴파일 시 오류 문구가 생기므로 "),s("strong",[t._v("형변환")]),t._v(" 이 필요하다.")])]),t._v(" "),s("h4",{attrs:{id:"_4-memccpy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-memccpy"}},[t._v("#")]),t._v(" 4. memccpy")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ft_memccpy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("dst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("size_t")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("size_t")]),t._v("\t\t\ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cp_dst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cp_src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   cp_dst "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("dst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   cp_src "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   \tcp_dst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cp_src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cp_src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   \t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dst "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \ti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("memccpy")]),t._v(" 함수는 문자열("),s("code",[t._v("src")]),t._v(") 의 시작점에서 "),s("code",[t._v("n")]),t._v(" 만큼을 "),s("code",[t._v("dst")]),t._v(" 에 복사하는데 "),s("code",[t._v("c")]),t._v(" 값을 찾으면 "),s("code",[t._v("c")]),t._v(" 까지만 복사하고 종료한다.")]),t._v(" "),s("li",[s("code",[t._v("return")]),t._v(" 값이 특이한데, "),s("code",[t._v("c")]),t._v(" 값이 "),s("code",[t._v("n")]),t._v(" 범위 안 "),s("code",[t._v("src")]),t._v("에 존재한다면, "),s("code",[t._v("c")]),t._v("가 있던 src의 "),s("em",[s("strong",[t._v("다음 주소")])]),t._v(" 를 반환하며,  "),s("code",[t._v("n")]),t._v(" 범위 안에 "),s("code",[t._v("c")]),t._v(" 값이 없다면 "),s("code",[t._v("NULL")]),t._v(" 을 반환한다.\n"),s("br")])]),t._v(" "),s("h2",{attrs:{id:"_7-학습-내용에-대한-개인적인-총평"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-학습-내용에-대한-개인적인-총평"}},[t._v("#")]),t._v(" 7. 학습 내용에 대한 개인적인 총평")]),t._v(" "),s("ul",[s("li",[t._v("새벽 시간을 이용해서 공부를 하다보니 피로도가 증가하는 부분이 크다. 패턴을 만들어 루틴있게 활동할 수 있도록 해야겠다.")]),t._v(" "),s("li",[s("code",[t._v("memory 함수")]),t._v(" 에 대한 이해를 높일 수 있었으며, 각각의 함수들의 원리 및 특징에 대해서 기억할 수 있도록 여러번 정리한 내용을 읽어보도록 해야겠다.")]),t._v(" "),s("li",[t._v("여전히 효율적으로 시간을 쓰지 못하는 부분이 크므로, 하루 단위 시간 계획을 짜도록 하자.")])]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"_8-다음-학습-계획"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-다음-학습-계획"}},[t._v("#")]),t._v(" 8. 다음 학습 계획")]),t._v(" "),s("ul",[s("li",[t._v("makefile 에 대한 학습.")]),t._v(" "),s("li",[t._v("남은 mem*.c 에 대해 학습 및 구현.")]),t._v(" "),s("li",[t._v("part 1 함수 완료\n"),s("br")])]),t._v(" "),s("h2",{attrs:{id:"_9-참고-링크"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-참고-링크"}},[t._v("#")]),t._v(" 9. 참고 링크")]),t._v(" "),s("ul",[s("li",[t._v("libft test : https://github.com/jtoty/Libftest")]),t._v(" "),s("li",[t._v("메모리 접근 unsigned char : https://kldp.org/node/75686\n"),s("br")])]),t._v(" "),s("h2",{attrs:{id:"_10-과제제출-repository-주소"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-과제제출-repository-주소"}},[t._v("#")]),t._v(" 10. 과제제출 repository 주소")]),t._v(" "),s("p",[t._v("http://git.innovationacademy.kr/inshin/libft")])])}),[],!1,null,null,null);e.default=n.exports}}]);