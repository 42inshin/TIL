(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{423:function(_,v,t){"use strict";t.r(v);var a=t(45),r=Object(a.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"_2020-12-21-월"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2020-12-21-월"}},[_._v("#")]),_._v(" 2020-12-21(월)")]),_._v(" "),t("h2",{attrs:{id:"_1-학습-날짜"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-학습-날짜"}},[_._v("#")]),_._v(" 1. 학습 날짜")]),_._v(" "),t("ul",[t("li",[_._v("2020-12-21(월)\n"),t("br")])]),_._v(" "),t("h2",{attrs:{id:"_2-학습-시간"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-학습-시간"}},[_._v("#")]),_._v(" 2. 학습 시간")]),_._v(" "),t("ul",[t("li",[_._v("02:00 ~ 09:00 (집)")]),_._v(" "),t("li",[_._v("15:00 ~ 18:00 (카페)\n"),t("br")])]),_._v(" "),t("h2",{attrs:{id:"_3-학습-범위-및-주제"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-학습-범위-및-주제"}},[_._v("#")]),_._v(" 3. 학습 범위 및 주제")]),_._v(" "),t("ul",[t("li",[_._v("해커톤 정리")]),_._v(" "),t("li",[_._v("cs50 강의 마무리\n"),t("br")])]),_._v(" "),t("h2",{attrs:{id:"_4-동료-학습-방법"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-동료-학습-방법"}},[_._v("#")]),_._v(" 4. 동료 학습 방법")]),_._v(" "),t("ul",[t("li",[_._v("해당사항없음.\n"),t("br")])]),_._v(" "),t("h2",{attrs:{id:"_5-학습-목표"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-학습-목표"}},[_._v("#")]),_._v(" 5. 학습 목표")]),_._v(" "),t("ul",[t("li",[_._v("자료구조에 대한 이해\n"),t("br")])]),_._v(" "),t("h2",{attrs:{id:"_6-상세-학습-내용"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-상세-학습-내용"}},[_._v("#")]),_._v(" 6. 상세 학습 내용")]),_._v(" "),t("blockquote",[t("p",[_._v("실제 코딩 시간 : 총 0시간.")])]),_._v(" "),t("h3",{attrs:{id:"연결리스트-이진-트리-구조"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#연결리스트-이진-트리-구조"}},[_._v("#")]),_._v(" 연결리스트 : 이진 트리 구조")]),_._v(" "),t("ul",[t("li",[_._v("트리는 연결리스트를 기반으로 한 새로운 데이터 구조입니다.")]),_._v(" "),t("li",[_._v("연결리스트에서의 각 노드 (연결 리스트 내의 한 요소를 지칭)들의 연결이 1차원적으로 구성되어 있다면, 트리에서의 노드들의 연결은 2차원적으로 구성되어 있다고 볼 수 있습니다.")]),_._v(" "),t("li",[_._v("각 노드는 일정한 층에 속하고, 다음 층의 노드들을 가리키는 포인터를 가지게 됩니다.")]),_._v(" "),t("li",[_._v("가장 높은 층에서 트리가 시작되는 노드를 "),t("code",[_._v("‘루트’")]),_._v("라고 합니다. 루트 노드는 다음 층의 노드들을 가리키고 있고, 이를 "),t("code",[_._v("‘자식 노드’")]),_._v("라고 합니다.")]),_._v(" "),t("li",[_._v("이진 검색 트리의 검색 실행 시간과 노드 삽입 시간은 모두 "),t("code",[_._v("O(log n)")]),_._v(" 입니다.")])]),_._v(" "),t("h3",{attrs:{id:"해시-테이블"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#해시-테이블"}},[_._v("#")]),_._v(" 해시 테이블")]),_._v(" "),t("ul",[t("li",[_._v("해시 테이블은 "),t("code",[_._v("‘연결 리스트의 배열’")]),_._v("입니다.")]),_._v(" "),t("li",[_._v("각 값들은 "),t("code",[_._v("‘해시 함수’")]),_._v("라는 맞춤형 함수를 통해서 어떤 바구니에 담기는 지가 결정 됩니다.")]),_._v(" "),t("li",[_._v("각 바구니에 담기는 값들은 그 바구니에서 새롭게 정의되는 연결 리스트로 이어집니다.")]),_._v(" "),t("li",[_._v("이와 같이 연결 리스트가 담긴 바구니가 여러개 있는 것이 "),t("code",[_._v("‘연결 리스트의 배열’, 즉 ‘해시 테이블’")]),_._v("이 됩니다.")]),_._v(" "),t("li",[_._v("검색시간은 "),t("code",[_._v("O(1)")]),_._v(" ~ "),t("code",[_._v("O(n)")])])]),_._v(" "),t("h3",{attrs:{id:"트라이"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#트라이"}},[_._v("#")]),_._v(" 트라이")]),_._v(" "),t("ul",[t("li",[_._v("‘트라이’는 기본적으로 ‘트리’ 형태의 자료 구조입니다.")]),_._v(" "),t("li",[_._v("특이한 점은 각 노드가 ‘배열’로 이루어져있다는 것입니다.")]),_._v(" "),t("li",[_._v("예를 들어 영어 알파벳으로 이루어진 문자열 값을 저장한다고 한다면 이 노드는 a부터 z까지의 값을 가지는 배열이 됩니다.")]),_._v(" "),t("li",[_._v("그리고 배열의 각 요소, 즉 알파벳은 다음 층의 노드(a-z 배열)를 가리킵니다.")]),_._v(" "),t("li",[_._v("예시와 같은 트라이에서 값을 검색하는데 걸리는 시간은 ‘문자열의 길이’에 의해 한정됩니다.")]),_._v(" "),t("li",[_._v("일반적인 영어 이름의 길이를 n이라고 했을 때, 검색 시간은 "),t("code",[_._v("O(n)")]),_._v("이 되지만, 대부분의 이름은 그리 크지 않은 "),t("code",[_._v("상수값(예, 20자 이내)")]),_._v("이기 때문에 "),t("code",[_._v("O(1)")]),_._v("이나 마찬가지라고 볼 수 있습니다.")]),_._v(" "),t("li",[_._v("실행시간은 단축되지만, 많은 양의 메모리가 필요합니다.")])]),_._v(" "),t("h3",{attrs:{id:"큐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#큐"}},[_._v("#")]),_._v(" 큐")]),_._v(" "),t("ul",[t("li",[_._v("큐는 메모리 구조에서 살펴봤듯이 값이 아래로 쌓이는 구조입니다.")]),_._v(" "),t("li",[_._v("값을 넣고 뺄 때 "),t("code",[_._v("‘선입 선출’")]),_._v(" 또는 "),t("code",[_._v("‘FIFO’")]),_._v("라는 방식을 따르게 됩니다. 가장 먼저 들어온 값이 가장 먼저 나가는 것이죠.")]),_._v(" "),t("li",[_._v("은행에서 줄을 설 때 가장 먼저 줄을 선 사람이 가장 먼저 업무를 처리하게 되는 것과 동일합니다.")]),_._v(" "),t("li",[_._v("배열이나 연결 리스트를 통해 구현 가능합니다.")])]),_._v(" "),t("h3",{attrs:{id:"스택"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#스택"}},[_._v("#")]),_._v(" 스택")]),_._v(" "),t("ul",[t("li",[_._v("반면 스택은 역시 메모리 구조에서 살펴봤듯이 값이 위로 쌓이는 구조입니다.")]),_._v(" "),t("li",[_._v("따라서 값을 넣고 뺄 때 "),t("code",[_._v("‘후입 선출’")]),_._v(" 또는 "),t("code",[_._v("‘LIFO’")]),_._v("라는 방식을 따르게 됩니다. 가장 나중에 들어온 값이 가장 먼저 나가는 것이죠.")]),_._v(" "),t("li",[_._v("뷔페에서 접시를 쌓아 뒀을 때 사람들이 가장 위에 있는(즉, 가장 나중에 쌓인) 접시를 가장 먼저 들고 가는 것과 동일합니다.")]),_._v(" "),t("li",[_._v("역시 배열이나 연결 리스트를 통해 구현 가능합니다.")])]),_._v(" "),t("h3",{attrs:{id:"딕셔너리"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#딕셔너리"}},[_._v("#")]),_._v(" 딕셔너리")]),_._v(" "),t("ul",[t("li",[_._v("딕셔너리는 ‘키’와 ‘값’이라는 요소로 이루어져 있습니다.")]),_._v(" "),t("li",[_._v("‘키’에 해당하는 ‘값’을 저장하고 읽어오는 것이죠. 마치 대학교에서 ‘학번’에 따라서 ‘학생’이 결정되는 것과 동일합니다.")]),_._v(" "),t("li",[_._v("일반적인 의미에서 ‘해시 테이블’과 동일한 개념이라고도 볼 수 있습니다.")]),_._v(" "),t("li",[_._v("역시 ‘키’를 어떻게 정의할 것인지가 중요합니다.")])]),_._v(" "),t("br"),_._v(" "),t("h2",{attrs:{id:"_7-학습-내용에-대한-개인적인-총평"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-학습-내용에-대한-개인적인-총평"}},[_._v("#")]),_._v(" 7. 학습 내용에 대한 개인적인 총평")]),_._v(" "),t("ul",[t("li",[_._v("많지 않은 강의를 2달간동안 찬찬히 보다 드디어 다보게 되었다. 지금까지의 본 내용은 la piscine과 libft 에 특히 도움이 되는 강의였는데, 참고로 라피신이 시작되기 전에 이 강의를 본다면 정말 도움이 많이 될 것 같다.")]),_._v(" "),t("li",[_._v("돌이켜 생각해보면 c가 뭔지도, 컴파일이 뭔지도, 알고리즘이 뭔지도 몰랐었는데 지금 현재를 생각해보면 아는 것들이 많아지고, 혼자서 코드를 짜는 것들이 신기하기도 하다. 그 시간동안 참 힘들게 공부를 했지만 잘 성장중인것 같아 다행이다.\n"),t("br")])]),_._v(" "),t("h2",{attrs:{id:"_8-다음-학습-계획"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-다음-학습-계획"}},[_._v("#")]),_._v(" 8. 다음 학습 계획")]),_._v(" "),t("ul",[t("li",[_._v("GNL 평가")]),_._v(" "),t("li",[_._v("Printf 시작\n"),t("br")])]),_._v(" "),t("h2",{attrs:{id:"_9-참고-링크"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-참고-링크"}},[_._v("#")]),_._v(" 9. 참고 링크")]),_._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://www.boostcourse.org/cs112/lecture/119043",target:"_blank",rel:"noopener noreferrer"}},[_._v("트라이 설명"),t("OutboundLink")],1),_._v(" "),t("br")])])])}),[],!1,null,null,null);v.default=r.exports}}]);