(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{473:function(a,t,r){"use strict";r.r(t);var _=r(45),s=Object(_.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"_2021-03-15-월"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2021-03-15-월"}},[a._v("#")]),a._v(" 2021-03-15(월)")]),a._v(" "),r("h2",{attrs:{id:"_1-학습-날짜"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-학습-날짜"}},[a._v("#")]),a._v(" 1. 학습 날짜")]),a._v(" "),r("ul",[r("li",[a._v("2021-03-15(월)\n"),r("br")])]),a._v(" "),r("h2",{attrs:{id:"_2-학습-시간"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-학습-시간"}},[a._v("#")]),a._v(" 2. 학습 시간")]),a._v(" "),r("ul",[r("li",[a._v("16:00 ~ 24:00 (집)\n"),r("br")])]),a._v(" "),r("h2",{attrs:{id:"_3-학습-범위-및-주제"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-학습-범위-및-주제"}},[a._v("#")]),a._v(" 3. 학습 범위 및 주제")]),a._v(" "),r("ul",[r("li",[a._v("JavaScript")]),a._v(" "),r("li",[a._v("AJAX")]),a._v(" "),r("li",[a._v("비동기 처리")]),a._v(" "),r("li",[a._v("Callback function")]),a._v(" "),r("li",[a._v("Promise Object")]),a._v(" "),r("li",[a._v("async await\n"),r("br")])]),a._v(" "),r("h2",{attrs:{id:"_4-동료-학습-방법"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-동료-학습-방법"}},[a._v("#")]),a._v(" 4. 동료 학습 방법")]),a._v(" "),r("ul",[r("li",[a._v("해당사항없음.\n"),r("br")])]),a._v(" "),r("h2",{attrs:{id:"_5-학습-목표"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-학습-목표"}},[a._v("#")]),a._v(" 5. 학습 목표")]),a._v(" "),r("ul",[r("li",[a._v("면접을 위한 프론트엔드에서 사용하는 비동기 처리에 대해 학습\n"),r("br")])]),a._v(" "),r("h2",{attrs:{id:"_6-상세-학습-내용"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-상세-학습-내용"}},[a._v("#")]),a._v(" 6. 상세 학습 내용")]),a._v(" "),r("blockquote",[r("p",[a._v("실제 코딩 시간 : 총 0시간.")])]),a._v(" "),r("h3",{attrs:{id:"비동기-처리-기법-callback-promise-async-await"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#비동기-처리-기법-callback-promise-async-await"}},[a._v("#")]),a._v(" 비동기 처리 기법(callback, promise, async await)")]),a._v(" "),r("p",[a._v("자바 스크립트는 비동기 방식으로 코드를 읽어드린다.\n반대말의 동기 방식은 요청-응답 후 값을 받고 다음 함수를 처리하는 것이다.\n요청-응답 여부의 상관없이 빠르게 다음 코드를 실행하는 것을 비동기 방식라고 한다.")]),a._v(" "),r("p",[a._v("비동기 방식의 장점은 빠르게 페이지를 로드할 수 있고, 페이지 리로드 시 불필요하게 전체 코드를 다시 불러올 필요가 없어 리소스 낭비를 막아준다.\n하지만 js를 통해 다른 곳에서 데이터를 얻어와 그 데이터를 처리를 해야할 경우에 문제가 된다.\n아직 데이터를 얻기도 전에 다음 코드가 실행되는 문제가 발생하는 것이다.")]),a._v(" "),r("p",[a._v("그 문제를 해결하기 위해서 마치 동기 처리가 되는 구조를 만들어줘야하는데, 이걸 위해서 callback 함수, promise, async await 기법이 생겼다.")]),a._v(" "),r("p",[a._v("콜백 함수는 다른 코드의 인수로서 넘겨주는 “함수”이다. 부모 함수 내에 자식 함수가 부모 함수의 인자로 되어 있는 구조.. 그냥 찾아보자..\n아무튼 이 구조를 사용하면 함수 실행 시 자식함수가 만들어져야 부모함수가 끝나는 구조가 된다. 즉, 데이터를 다 읽은 후 함수가 처리되는 구조가 되는 것이다.")]),a._v(" "),r("p",[a._v("그러다가 객체 방식으로 더 쉽게 처리하기 나온게 Promise 이다.\npromise() 객체엔 데이터를 읽어드리는데 성공(이행 fufill), 실패(거부 reject)에 따라 결과 값을 사용할 수 있는 메서드가 있다. 그 메서드는 .resolve() .reject() 임.\n(메서드는 객체 안에 있는 함수를 부르는 말이다).\n프로미스의 장점은 여러 개의 프로미스를 연결할 수 있다는 점!  .then() 메서드를 이용하여 연결해준다.")]),a._v(" "),r("p",[a._v("async, await 는 비동기 처리 패턴 중 가장 최근에 나온 문법이다.\n(콜백 함수와 프로미스의 단점을 보완하기 위해 나온 문법!)\n우리가 자주 쓰는 문법에서 async 와 await 만 붙이면 해결되어 구조가 짧고 가독성이 좋다.\n위의 callback, promise 의 코드에 익숙하지 않아도 비동기 처리 코드를 만들 수 있다는 것이 장점!\n"),r("br")]),a._v(" "),r("h2",{attrs:{id:"_7-학습-내용에-대한-개인적인-총평"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-학습-내용에-대한-개인적인-총평"}},[a._v("#")]),a._v(" 7. 학습 내용에 대한 개인적인 총평")]),a._v(" "),r("ul",[r("li",[a._v("지금까지 몰랐던 프론트엔드 기본 용어들에 대해서 익히고 있는 중이다. 확실히 배우지 않은 내용들이다 보니 이해하는데에도 상당한 시간이 소요된다. 어떤 방식으로 왜 이 기법들이 생겼는지에 대한 사전 지식들을 쌓아가면서 웹이 어떻게 동작하고 어떻게 발전했는지에 대해서 공부를 해보았다.")]),a._v(" "),r("li",[a._v("앞으로의 시간을 더 몰입하여서 지금의 지식에서 큰 성장이 있길 기대하며, 그게 가능하도록 적극적으로 학습을 진행하도록 노력하자.\n"),r("br")])]),a._v(" "),r("h2",{attrs:{id:"_8-다음-학습-계획"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-다음-학습-계획"}},[a._v("#")]),a._v(" 8. 다음 학습 계획")]),a._v(" "),r("ul",[r("li",[a._v("웹 UI 정리\n"),r("br")])]),a._v(" "),r("h2",{attrs:{id:"_9-참고-링크"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-참고-링크"}},[a._v("#")]),a._v(" 9. 참고 링크")]),a._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://www.notion.so/06feadaf4b1249eea11d1c6af5683f9b",target:"_blank",rel:"noopener noreferrer"}},[a._v("Notion 비동기 처리 기법 정리 글"),r("OutboundLink")],1),a._v(" "),r("a",{attrs:{href:"https://joshua1988.github.io/web-development/javascript/javascript-asynchronous-operation/#%EB%93%A4%EC%96%B4%EA%B0%80%EB%A9%B0",target:"_blank",rel:"noopener noreferrer"}},[a._v("자바스크립트 비동기 처리와 콜백 함수"),r("OutboundLink")],1),a._v(" "),r("br")])])])}),[],!1,null,null,null);t.default=s.exports}}]);