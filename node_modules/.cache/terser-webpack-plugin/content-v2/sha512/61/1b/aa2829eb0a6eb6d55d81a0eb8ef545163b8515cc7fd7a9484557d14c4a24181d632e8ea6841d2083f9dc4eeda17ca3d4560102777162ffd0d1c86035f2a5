{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{381:function(t,s,a){\"use strict\";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"_1-학습-날짜\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-학습-날짜\"}},[t._v(\"#\")]),t._v(\" 1. 학습 날짜\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"2020-11-03(화)\\n\"),a(\"br\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_2-학습-시간\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-학습-시간\"}},[t._v(\"#\")]),t._v(\" 2. 학습 시간\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"12:00 ~ 15:00 (집)\")]),t._v(\" \"),a(\"li\",[t._v(\"18:30 ~ 20:00 (기차)\\n\"),a(\"br\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_3-학습-범위-및-주제\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-학습-범위-및-주제\"}},[t._v(\"#\")]),t._v(\" 3. 학습 범위 및 주제\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"Bonus 함수 구현\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}})])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"lstnew\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"lstadd_front\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"lstsize\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"lstlast\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"lstadd_back\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"O\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"O\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"O\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"O\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"O\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"lstdelone\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"lstclear\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"lstiter\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"lstmap\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}})]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"O\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"O\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"x\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"x\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}})])])])])]),t._v(\" \"),a(\"br\"),t._v(\" \"),a(\"h2\",{attrs:{id:\"_4-동료-학습-방법\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-동료-학습-방법\"}},[t._v(\"#\")]),t._v(\" 4. 동료 학습 방법\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"해당사항 없음.\\n\"),a(\"br\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_5-학습-목표\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-학습-목표\"}},[t._v(\"#\")]),t._v(\" 5. 학습 목표\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"ft_lstlast\")]),t._v(\", \"),a(\"code\",[t._v(\"ft_lstadd_back\")]),t._v(\", \"),a(\"code\",[t._v(\"ft_lstdelone\")]),t._v(\", \"),a(\"code\",[t._v(\"ft_lstclear\")]),t._v(\" 에 대해 자세히 학습하고 구현해보자.\")]),t._v(\" \"),a(\"li\",[t._v(\"연결 리스트에 대한 학습.\\n\"),a(\"br\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_6-상세-학습-내용\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-상세-학습-내용\"}},[t._v(\"#\")]),t._v(\" 6. 상세 학습 내용\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"실제 코딩 시간 : 총 2시간.\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"ft-lstlast\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ft-lstlast\"}},[t._v(\"#\")]),t._v(\" ft_lstlast\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[t._v(\"t_list\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"ft_lstlast\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"t_list \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"lst\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"lst \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"NULL\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"NULL\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"while\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"lst\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"NULL\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\t\\tlst \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" lst\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\"next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"lst\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"ul\",[a(\"li\",[t._v(\"매개변수 \"),a(\"code\",[t._v(\"lst\")]),t._v(\" 는 첫번째 node.\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"lst != NULL\")]),t._v(\" 이 아니라, \"),a(\"code\",[t._v(\"lst->next != NULL\")]),t._v(\" 로 해주어야 \"),a(\"code\",[t._v(\"마지막 lst\")]),t._v(\" 를 반환 할 수 있다.\\n\"),a(\"br\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"ft-lstadd-back\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ft-lstadd-back\"}},[t._v(\"#\")]),t._v(\" ft_lstadd_back\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\"\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"ft_lstadd_back\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"t_list \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"lst\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" t_list \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"new\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\tt_list \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"last\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!\")]),t._v(\"lst \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"||\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!\")]),t._v(\"new\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"lst \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"NULL\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"lst \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" new\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"lst \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&&\")]),t._v(\" new\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\tlast \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"ft_lstlast\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"lst\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\\tlast\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" new\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\\tnew\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"NULL\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"**lst\")]),t._v(\" : head 주소값 (\"),a(\"code\",[t._v(\"*lst\")]),t._v(\" 에 첫번째 node의 주소값 있음)\")]),t._v(\" \"),a(\"li\",[t._v(\"마지막 위치를 나타내는 함수 \"),a(\"code\",[t._v(\"ft_lstlast\")]),t._v(\" 를 이용하여 마지막으로 간 후,\")]),t._v(\" \"),a(\"li\",[t._v(\"마지막 lst 의 next 에 새로 만든 new 주소를 넣어 리스트가 이어지도록 한다.\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"new->next = NULL\")]),t._v(\" 을 넣어 마지막을 나타내자.\\n\"),a(\"br\"),a(\"br\")]),t._v(\" \"),a(\"li\",[t._v(\"lst == NULL, *lst == NULL 의 다른점.\\n\"),a(\"ul\",[a(\"li\",[t._v(\"앞은 리스트 자체가 없다.\")]),t._v(\" \"),a(\"li\",[t._v(\"뒤는 리스트는 존재하나 비어있다. (첫 node가 없음.)\")])])])]),t._v(\" \"),a(\"br\"),t._v(\" \"),a(\"h3\",{attrs:{id:\"ft-lstdelone\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ft-lstdelone\"}},[t._v(\"#\")]),t._v(\" ft_lstdelone\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\"\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"ft_lstdelone\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"t_list \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"lst\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"del\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"lst \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&&\")]),t._v(\" del\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"del\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"lst\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\"content\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"free\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"lst\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"del\")]),t._v(\" 이라는 함수가 있다는 것을 가정한 함수. 한줄의 내용을 삭제해야 한다.\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"libft\")]),t._v(\" 에서 주어진 \"),a(\"code\",[t._v(\"content\")]),t._v(\" 는 포인터로 만들어져 있으므로, free() 를 하기 전에 먼저 del() 을 해주자.\")]),t._v(\" \"),a(\"li\",[t._v(\"pdf 에서 \"),a(\"code\",[t._v(\"lst->next\")]),t._v(\"\\t 의 메모리를 free() 하지 말라고 적혀있는데, 저것을 free() 하게 되면 다음 노드에 영향을 주는 것인가?? 이 부분은 좀더 찾아봐야겠다.\\n\"),a(\"br\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"ft-lstclear\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ft-lstclear\"}},[t._v(\"#\")]),t._v(\" ft_lstclear\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\"\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"ft_lstclear\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"t_list \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"lst\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"del\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\tt_list \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"tmp\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\tt_list \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"next_node\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"lst \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"NULL\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"||\")]),t._v(\" del \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"NULL\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\ttmp \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"lst\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"while\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"tmp\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\tnext_node \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" tmp\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\"next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"del\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"tmp\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\"content\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"free\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"tmp\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\\ttmp \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" next_node\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"lst \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"NULL\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"ul\",[a(\"li\",[t._v(\"현재 lst 를 삭제하기 전에 next_node 에 다음 주소값을 넣어 놓음.\")]),t._v(\" \"),a(\"li\",[t._v(\"현재 lst content 삭제 후, 메모리 해제.\")]),t._v(\" \"),a(\"li\",[t._v(\"다음 주소로 이동해서 위의 작업 끝까지 반복.\")]),t._v(\" \"),a(\"li\",[t._v(\"*lst = NULL 처리.\\n\"),a(\"br\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_7-학습-내용에-대한-개인적인-총평\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_7-학습-내용에-대한-개인적인-총평\"}},[t._v(\"#\")]),t._v(\" 7. 학습 내용에 대한 개인적인 총평\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"구조체에 대한 강의들을 살펴보면서 포인터와 구조체, 연결 리스트에 대한 이해를 높일 수 있었다.\")]),t._v(\" \"),a(\"li\",[t._v(\"연결 리스트를 만들고 이어주며, 추가하고, 삭제하는 등의 여러 방식에 따라 코드가 동작하는 순서를 잘 파악해야 꼬이지 않는다.\")]),t._v(\" \"),a(\"li\",[t._v(\"사전 지식이 너무 부족하며, 체력적으로 정신적으로 많이 나약해진 요즘이다. 계속해서 클러스터에 나가서 근육키우듯이 코딩력을 키워야겠다.\")]),t._v(\" \"),a(\"li\",[t._v(\"libft 를 생각보다 너무 오래 끌고 있다. 물론, 최선을 다했다면 진작 끝냈을 문제인데 여차저차 핑계를 대면서 진도를 빨리 나가지 못한 원인이 크다. 다시금 마음을 다잡고 피씬 때처럼 열심히 해보도록 하자.\\n\"),a(\"br\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_8-다음-학습-계획\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_8-다음-학습-계획\"}},[t._v(\"#\")]),t._v(\" 8. 다음 학습 계획\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"기존 함수 오류 수정\")]),t._v(\" \"),a(\"li\",[t._v(\"part bonus\")]),t._v(\" \"),a(\"li\",[t._v(\"구조체 학습\")]),t._v(\" \"),a(\"li\",[t._v(\"libft 코드 정리\\n\"),a(\"br\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_9-참고-링크\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_9-참고-링크\"}},[t._v(\"#\")]),t._v(\" 9. 참고 링크\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"edwith 연결리스트 코딩 : https://www.edwith.org/boostcourse-cs-050/lecture/119039/\"),a(\"br\"),t._v(\"\\n42서울 cardet의 블로그 : https://velog.io/@hidaehyunlee/Libft-Bonus#4-ft_lstlast\\n\"),a(\"br\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_10-과제제출-repository-주소\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_10-과제제출-repository-주소\"}},[t._v(\"#\")]),t._v(\" 10. 과제제출 repository 주소\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"http://git.innovationacademy.kr/inshin/libft\")])])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}